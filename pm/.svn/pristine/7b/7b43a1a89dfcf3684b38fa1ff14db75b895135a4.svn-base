package com.cninsure.payment.util;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.cninsure.payment.dao.PMInterfacelogDao;
import com.cninsure.payment.entity.PMInterfacelog;
import com.common.PmInterfaceFilter;

/**
 * TODO parameter perfect
 */
@Aspect
@Component
@Order(5)
public class InterfaceAopAdvice {

	@Resource
	private PMInterfacelogDao dao;
	
	@Around("@annotation(pmFilter)")
	public Object aroundMethod(ProceedingJoinPoint joinpoint,PmInterfaceFilter pmFilter) {
		Object obj = null;
		String ip = null;
		String className;
		String method = null;
		String loginUserCode = null;
		Date enterMethodDate = new Date();
		Date exitMethodDate = null;
		String exceptionStr=null;

		ServletRequestAttributes t = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
		HttpServletRequest req = t.getRequest();


		className = joinpoint.getTarget().getClass().getSimpleName();
		method = joinpoint.getSignature().getName();
		List<Object> args = Arrays.asList(joinpoint.getArgs());

		try {
			obj = joinpoint.proceed();
		} catch (Throwable e) {
			e.printStackTrace();
			exceptionStr = e.getMessage();
		} finally {
			exitMethodDate = new Date();
		}

		wirtePMLog(ip, loginUserCode, className, method, args.toString(),pmFilter,enterMethodDate, exitMethodDate,exceptionStr);
		return obj;
	}

	/**
	 * 记录Controller日志
	 * 
	 * @return
	 */
	private boolean wirtePMLog(String ip, String loginUser, String className,String method, String args,PmInterfaceFilter pmFilter, Date enterMethodDate,Date exitMethodDate,String exceptionStr) {
		
		PMInterfacelog entity = new PMInterfacelog();
		entity.setCreatedate(enterMethodDate);
		entity.setInterfaceName(className);
		entity.setInterfaceMethod(method);
		if(StringUtils.isNoneBlank(pmFilter.value())){
			entity.setInterfaceType(Integer.valueOf(pmFilter.value()));
		}
		entity.setRequestParams(args);
		entity.setModifydate(exitMethodDate);
		entity.setExceptions(exceptionStr);
		dao.insert(entity);
		return true;
	}
}
