package com.cninsure.payment.dao.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.cninsure.core.dao.impl.BaseDaoImpl;
import com.cninsure.payment.dao.PMPaymentDao;
import com.cninsure.payment.entity.PMPayment;
import com.cninsure.payment.entity.Transaction1810;
import com.cninsure.payment.model.AppCheckModel;
import com.cninsure.payment.model.OrdersDetailModel;
import com.cninsure.payment.model.PlatformModel;

@Repository
public class PMPaymentDaoImpl extends BaseDaoImpl<PMPayment,Long> implements
		PMPaymentDao {

	@Override
	public long getOrdersListCount(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectOne("PMPayment_getOrdersListCount",map);
	}

	@Override
	public List<Map<Object, Object>> selectOrdersList(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMPayment_selectOrdersList",map);
	}

	@Override
	public String getForMoneys(PlatformModel platformBean) {
		return this.sqlSessionTemplate.selectOne("PMPayment_getForMoneys",platformBean);
	}

	@Override
	public String getOutMoneys(PlatformModel platformBean) {
		return this.sqlSessionTemplate.selectOne("PMPayment_getOutMoneys",platformBean);
	}

	@Override
	public long getPlatformListCount(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectOne("PMPayment_getPlatformListCount",map);
	}

	@Override
	public List<Map<Object, Object>> selectPlatformList(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMPayment_selectPlatformList",map);
	}

	@Override
	public int updatePaySuccessByPayProtocol(String payProtocolid,String verifycode){
		Map<String,Object> param = new HashMap<String,Object>();
		param.put("payprotocolid", payProtocolid);
		param.put("modifydate", new Date());
		param.put("verifycode", verifycode);
		return this.sqlSessionTemplate.update(this.getSqlName("updatePaySuccessByPayProtocol"), param);
	}

	@Override
	public int updatePayProtocolNullByPayProtocol(String payProtocolid) {
		Map<String,Object> param = new HashMap<String,Object>();
		param.put("payprotocolid", payProtocolid);
		param.put("modifydate", new Date());
		return this.sqlSessionTemplate.update(this.getSqlName("updatePayProtocolNullByPayProtocol"), param);
	}
	
	@Override
	public long getAppPlatformListCount(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectOne("PMPayment_getAppPlatformListCount",map);
	}

	@Override
	public List<Map<Object, Object>> selectAppPlatformList(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMPayment_selectAppPlatformList",map);
	}

	@Override
	public String getForMoneys(AppCheckModel appCheckBean) {
		return this.sqlSessionTemplate.selectOne("PMPayment_getAppForMoneys",appCheckBean);
	}
	@Override
	public String getOutMoneys(AppCheckModel appCheckBean) {
		return this.sqlSessionTemplate.selectOne("PMPayment_getAppOutMoneys",appCheckBean);
	}
	
	
	@Override
	public long getAppOrdersListCount(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectOne("PMPayment_getAppOrdersListCount",map);
	}

	@Override
	public List<Map<Object, Object>> selectAppOrdersList(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMPayment_selectAppOrdersList",map);
	}

	@Override
	public List<Map<String, Object>> getPaymentReconList(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMPayment_getPaymentReconList",map);
	}

	@Override
	public List<Map<String, Object>> getTransaction1810List(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMPayment_getTransaction1810List",map);
	}

	@Override
	public int insertTran1810(List<Transaction1810> listtran) {
		return this.sqlSessionTemplate.insert("PMPayment_insertTran1810",listtran);
	}

	@Override
	public int updatePayProtocolByProtocol(String payProtocol, String protocol) {
		Map<String,Object> parameter = new HashMap<String, Object>();
		parameter.put("payprotocolid", payProtocol);
		parameter.put("protocolid", protocol);
		parameter.put("modifydate", new Date());
		
		return this.sqlSessionTemplate.update(this.getSqlName("updatePayProtocolByProtocol"), parameter);
	}

	@Override
	public List<Map<String, Object>> getPaymentReconDetailList(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMPayment_getPaymentReconDetailList",map);
	}

	@Override
	public int updatePaymentDataById(long paymentPlatformId,long appId,long bankCardId,String protocol,long id){
		Map<String,Object> parameter = new HashMap<String, Object>();
		parameter.put("id", id);
		parameter.put("protocolid", protocol);
		parameter.put("appId", appId);
		parameter.put("bankCardId", bankCardId);
		parameter.put("paymentPlatformId", paymentPlatformId);
		parameter.put("modifydate", new Date());
		
		return this.sqlSessionTemplate.update(this.getSqlName("updatePaymentDataById"), parameter);
	}

	@Override
	public int updatePayProtocolById(String payProtocol, long id) {
		Map<String,Object> parameter = new HashMap<String, Object>();
		parameter.put("id", id);
		parameter.put("payProtocol", payProtocol);
		parameter.put("modifydate", new Date());
		return this.sqlSessionTemplate.update(this.getSqlName("updatePayProtocolById"), parameter);
	}

	@Override
	public PMPayment selectByPayProtocol(String payProtocol) {
		return this.sqlSessionTemplate.selectOne(this.getSqlName("selectByPayProtocol"), payProtocol);
	}

	@Override
	public PMPayment getBasicMess(String paymentId) {
		return this.sqlSessionTemplate.selectOne(this.getSqlName("selectBypaymentId"), paymentId);
	}

	@Override
	public int updateByPayProtocolIdSelective(PMPayment record) {
		return this.sqlSessionTemplate.update(this.getSqlName("updateByPayProtocolIdSelective"), record);
	}

	@Override
	public long getAllOrdersListCount(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectOne("PMPayment_getAllOrdersListCount", map);
	}

	@Override
	public List<Map<Object, Object>> selectAllOrdersList(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMPayment_selectAllOrdersList",map);
	}

	@Override
	public OrdersDetailModel selectOrdersDetailById(String paymentId) {
		return this.sqlSessionTemplate.selectOne(this.getSqlName("selectOrdersDetailById"), paymentId);
	}
	
	@Override
	public String getVerifyCode(String paymentId) {
		Map<String,Object> param = new HashMap<String,Object>();
		param.put("paymentId", paymentId);
		return this.sqlSessionTemplate.selectOne(this.getSqlName("getVerifyCode"), param);
	}

	@Override
	public List<Map<Object, Object>> selectDirectPayment2011List(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMPayment_selectDirectPayment2011List",map);
	}

	@Override
	public long selectDirectPayment2011ListCount(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectOne("PMPayment_selectDirectPayment2011ListCount",map);
	}

	@Override
	public List<Map<Object, Object>> selectSettlePayment1361List( Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMPayment_selectSettlePayment1361List",map);
	}

	@Override
	public long selectSettlePayment1361ListCount(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectOne("PMPayment_selectSettlePayment1361ListCount",map);
	}

	@Override
	public long selectSettleProduct1341ListCount(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectOne("PMPayment_selectSettleProduct1341ListCount",map);
	}

	@Override
	public List<Map<Object, Object>> selectSettleProduct1341List( Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMPayment_selectSettleProduct1341List",map);
	}

}