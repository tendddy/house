package com.cninsure.payment.service;

import java.math.BigDecimal;
import java.util.Date;

import javax.annotation.Resource;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.transaction.annotation.Transactional;

import com.cninsure.payment.dao.PMAppchannelDao;
import com.cninsure.payment.dao.PMAppchannellmitDao;
import com.cninsure.payment.dao.PMApppaymentDao;
import com.cninsure.payment.dao.PMAppplatformDao;
import com.cninsure.payment.dao.PMPaychannelDao;
import com.cninsure.payment.dao.PMPaymentplatformDao;
import com.cninsure.payment.dao.PMPaymentrateDao;
import com.cninsure.payment.entity.PMAppchannel;
import com.cninsure.payment.entity.PMAppchannellmit;
import com.cninsure.payment.entity.PMAppplatform;
import com.cninsure.payment.entity.PMPayment;
import com.cninsure.payment.entity.PMPaymentplatform;
import com.cninsure.payment.entity.PMPaymentrate;
import com.cninsure.payment.model.OrderDetail4ActionModel;
import com.cninsure.payment.model.PaymentPlatformsModel;

@RunWith(SpringJUnit4ClassRunner.class)
@WebAppConfiguration(value = "src/main/webapp")
@ContextConfiguration(locations = { "classpath:config/spring-config.xml",
		"classpath:config/spring-security-config.xml",
		"classpath:config/spring-mvc-config.xml",
		"classpath:config/spring-config-db.xml", })
//@Transactional(rollbackForClassName = "PMPaymentServiceTest")
//@TestExecutionListeners(WebappListenerTest.class)
public class PMPaymentServiceTest {

	@Resource
	private PMPaymentService service;
	@Resource
	private PMPaymentplatformDao paymengPlatformDao;
	@Resource
	private PMAppplatformDao appDao;
	@Resource
	private PMApppaymentDao appPaymentDao;
	@Resource
	private PMPaymentrateDao paymentrateDao;
	@Resource
	private PMAppchannelDao pmappchanneldao;
	@Resource
	private PMPaychannelDao paychannelDao;
	@Resource
	private PMAppchannellmitDao appchannellmitDao;

	/**
	 * 初始化当前业务数据
	 */
	private long initTestInitAllPayments() {

		//应用平台信息
		PMAppplatform appPlateformEntity = new PMAppplatform();
		appPlateformEntity.setCreatedate(new Date());
		appPlateformEntity.setModifydate(new Date());
		appPlateformEntity.setPlatformNo("001");
		appPlateformEntity.setPlatformName("测试数据请勿修改");
		appPlateformEntity.setStatus("1");
		appPlateformEntity.setDomain("www.zhangzhongbao.com");
		appDao.insert(appPlateformEntity);

		
		for (int i = 5; i >0; i--) {
			
			// 支付平台信息
			PMPaymentplatform entity = new PMPaymentplatform();
			entity.setCreatedate(new Date());
			entity.setModifydate(new Date());
			entity.setPlatformLogo("logPath");
			entity.setPlatformName("测试数据请勿修改" + i);
			entity.setPlatformNo("00000" + i);
			entity.setSettlementInterval(90);
			entity.setSettlementType("1");
			entity.setStatus("1");
			if(i==1||i==2){
				entity.setPpType("2");
			}else{
				entity.setPpType("1");
			}
			
			paymengPlatformDao.insert(entity);
			for(int k = 0; k<5; k++){
				//应用平台渠道
				PMAppchannel appChannel = new PMAppchannel();
				appChannel.setAppId(appPlateformEntity.getId());
				appChannel.setCreatedate(new Date());
				appChannel.setPaymentId(entity.getId());
				appChannel.setChannelId((long)k);
				appChannel.setModifydate(new Date());
				pmappchanneldao.insert(appChannel);
			}
			
			//初始化支付平台费率 
			PMPaymentrate paymentRateEntity = new PMPaymentrate();
			paymentRateEntity.setChannelType("1");
			paymentRateEntity.setCreatedate(new Date());
			paymentRateEntity.setModifydate(new Date());
			paymentRateEntity.setPaymentId(entity.getId());
			paymentRateEntity.setRate(new BigDecimal(i*0.1));
			paymentrateDao.insert(paymentRateEntity);
			
			
		}
		return appPlateformEntity.getId();
	}

	@Test
	public void testInitAllPayments() {
		
		OrderDetail4ActionModel orderModel = new OrderDetail4ActionModel();
		orderModel.setAppId(51L);
		orderModel.setAppUserId("456");
		orderModel.setAppUserName("张三");
		orderModel.setIdcard("130283198904040982");
		orderModel.setOrderdatetime("20160908025534");
		orderModel.setOrderfee(23000);
		orderModel.setPayfee(500);
		orderModel.setReceiveurl("www.zhangzhongbao.com/aaa/vvv/bbb");
		orderModel.setUserinfourl("www.zhangzhongbao.com/aaa/vvv/bbbds/sddds");

		PaymentPlatformsModel resultModel = service.initAllPayments(orderModel);
		System.out.println(resultModel);
		
//		Assert.assertEquals("判断支付平台个数",5, resultModel.getPaymentPlatforms().size());
//		Assert.assertEquals("判断费率最低支付平台","测试支付平台1", resultModel.getPaymentPlatforms().get(0).getPlatformName());
	}
	
	@Test
	public void insertPF(){
		// 初始化应用平台信息
//				PMAppplatform appPlateformEntity = new PMAppplatform();
//				appPlateformEntity.setCreatedate(new Date());
//				appPlateformEntity.setModifydate(new Date());
//				appPlateformEntity.setPlatformNo("001");
//				appPlateformEntity.setPlatformName("测试数据请勿修改");
//				appPlateformEntity.setStatus("1");
//				appPlateformEntity.setDomain("www.zhangzhongbao.com");
//				appDao.insert(appPlateformEntity);
				
		for(int i=2;i<6;i++){
			//应用平台渠道
			PMAppchannel appChannel = new PMAppchannel();
			appChannel.setAppId(34L);
			appChannel.setCreatedate(new Date());
			appChannel.setPaymentId(127L);
			appChannel.setChannelId((long)i);
			appChannel.setModifydate(new Date());
			pmappchanneldao.insert(appChannel);
		}
					
	}
	
	@Test
	public void t1(){
		PMAppchannellmit model =  appchannellmitDao.selectById(294L);
		System.out.println(model);
	}
	
	
	@Test
	public void sendPayresult()
	{
		PMPayment payment = new PMPayment();
		
	}
}