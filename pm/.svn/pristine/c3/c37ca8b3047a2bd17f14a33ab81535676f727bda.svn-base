package com.cninsure.payment.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.cninsure.payment.dao.PMProductsDao;
import com.cninsure.payment.entity.PMProducts;

@Repository
public class PMProductsDaoImpl implements PMProductsDao{

	@Autowired(required = true)
	private SqlSession sqlSessionTemplate;

	public void setSqlSession1(SqlSession sqlSessionTemplate) {
		this.sqlSessionTemplate = sqlSessionTemplate;
	}
	@Override
	public int deleteByPrimaryKey(Long id) {
		return this.sqlSessionTemplate.delete("PMProducts_deleteByPrimaryKey", id);
	}

	@Override
	public int insert(PMProducts record) {
		return this.sqlSessionTemplate.insert("PMProducts_insert", record);
	}

	@Override
	public int insertSelective(PMProducts record) {
		return this.sqlSessionTemplate.insert("PMProducts_insertSelective",record);
	}

	@Override
	public PMProducts selectByPrimaryKey(Long id) {
		return this.sqlSessionTemplate.selectOne("PMProducts_selectByPrimaryKey", id);
	}

	@Override
	public int updateByPrimaryKeySelective(PMProducts record) {
		return this.sqlSessionTemplate.update("PMProducts_updateByPrimaryKeySelective", record);
	}
	
	@Override
	public int updateByPayProtocolIdSelective(PMProducts record) {
		return this.sqlSessionTemplate.update("PMProducts_updateByPayProtocolIdSelective", record);
	}
	
	@Override
	public int updateByPrimaryKey(PMProducts record) {
		return this.sqlSessionTemplate.update("PMProducts_updateByPrimaryKey",record);
	}
	@Override
	public int insertBatch(List<PMProducts> records) {
		return this.sqlSessionTemplate.insert("PMProducts_insertBatch", records);
	}
	@Override
	public List<PMProducts> selectByPaymentId(long paymentId) {
		return this.sqlSessionTemplate.selectList("PMProducts_selectByPaymentId", paymentId);
	}
	@Override
	public int updateByStatementProtocolId(PMProducts record) {
		return this.sqlSessionTemplate.update("PMProducts_updateByStatementProtocolId", record);
	}
	@Override
	public long selectActualSuccByPaymentId(Long paymentId,String statuss) {
		Map<String,Object> param = new HashMap<String,Object>();
		param.put("paymentId", paymentId);
		param.put("statuss", statuss);
		return this.sqlSessionTemplate.selectOne("PMProducts_selectActualSuccByPaymentId", param);
	}
	@Override
	public long updateProductsStatusByPaymentId(Long id,String statuss) {
		Map<String,Object> param = new HashMap<String,Object>();
		param.put("paymentId", id);
		param.put("statuss", statuss);
		return this.sqlSessionTemplate.update("PMProducts_updateProductsStatusByPaymentId", param);
	}
	@Override
	public long updateProductsStatusById(Long id,String statuss) {
		Map<String,Object> param = new HashMap<String,Object>();
		param.put("id", id);
		param.put("statuss", statuss);
		return this.sqlSessionTemplate.update("PMProducts_updateProductsStatusById", param);
	}
	
}