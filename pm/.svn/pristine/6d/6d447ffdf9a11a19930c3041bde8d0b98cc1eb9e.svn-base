package com.cninsure.payment.service.impl;

import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;





import org.apache.commons.io.FileUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import com.cninsure.core.dao.BaseDao;
import com.cninsure.core.dao.impl.BaseServiceImpl;
import com.cninsure.core.utils.StringUtil;
import com.cninsure.payment.dao.PMSettleAttachDao;
import com.cninsure.payment.dao.PMSettleCaseDao;
import com.cninsure.payment.dao.PMSettlementDao;
import com.cninsure.payment.entity.PMSettleAttach;
import com.cninsure.payment.entity.PMSettleCase;
import com.cninsure.payment.service.PMSettleCaseService;
import com.cninsure.system.entity.INSCUser;

@Service
@Transactional
public class PMSettleCaseServiceImpl extends BaseServiceImpl<PMSettleCase,Long> implements PMSettleCaseService {
	@Resource
	private PMSettleCaseDao pmSettleCaseDao;
	@Resource
	private PMSettlementDao pmSettlementDao;
	@Resource
	private PMSettleAttachDao pmSettleAttachDao;
	
	@Autowired
	private HttpServletRequest request;
	
	@SuppressWarnings("unused")
	private long filesize = 0;// 文件大小
	String url = "/pm/static/pmSettleAttach/";// --网址式图片访问地址
	
	@Override
	protected BaseDao<PMSettleCase,Long> getBaseDao() {
		return pmSettleCaseDao;
	}

	/*
	 * file是文件流
	 */
	public String LoadImageToServer(MultipartFile file) {
		if (file != null) {
			// 获取保存的路径，
			String realPath = request.getSession().getServletContext()
					.getRealPath("/static/pmSettleAttach/");
			if (file.isEmpty()) {
				// 未选择文件
				System.out.println("未选择文件");
				return "ERROR";
			} else {
				// 文件原名称
				String originFileName = file.getOriginalFilename();
//				if(!checkGifJpgBmp(originFileName)){
//					return "NOextension";
//				}
				filesize=file.getSize();
				try {
					// 这里使用Apache的FileUtils方法来进行保存
					FileUtils.copyInputStreamToFile(file.getInputStream(),
							new File(realPath, originFileName));
					return "OK";
				} catch (IOException e) {
					System.out.println("文件上传失败");
					return "ERROR";
				}
			}
		} else {
			return null;
		}
	}
	//保存结算情况和上传附件功能
	@Override
	public Map<String, Object> saveCaseAndAttach(PMSettleCase pmSettleCase,MultipartFile file,INSCUser loginUser) {
		Map<String,Object> map = new HashMap<String,Object>();
		if(StringUtil.isEmpty(pmSettleCase.getId())){
			if("应结".equals(pmSettleCase.getStatus())){
				pmSettleCase.setStatus("0");
			}else{
				pmSettleCase.setStatus("1");
			}
			pmSettleCase.setSettleTotalfee(new DecimalFormat("####").format(new BigDecimal(pmSettleCase.getSettleTotalfee().replace(",", "")).movePointRight(2)));
			pmSettleCaseDao.saveSettleCase(pmSettleCase);
		}
		PMSettleAttach pmSettleAttach = new PMSettleAttach();
		if ("OK".equals(this.LoadImageToServer(file))) {
			pmSettleAttach.setAttachName(file.getOriginalFilename());
			pmSettleAttach.setCaseId(pmSettleCase.getId());
			pmSettleAttach.setAttachPath(url+file.getOriginalFilename());
			pmSettleAttach.setAttachUser(loginUser.getName());
			pmSettleAttachDao.saveSettleAttach(pmSettleAttach);
		}else{
			map.put("status", "error");
			map.put("message", "上传失败，请重新上传！");
			return map;
		}
		
		map.put("cid", pmSettleCase.getId());
		map.put("status", "success");
		map.put("message", "上传成功！");
		map.put("aid", pmSettleAttach.getId());
		map.put("attach_name", pmSettleAttach.getAttachName());
		map.put("attach_user", pmSettleAttach.getAttachUser());
		map.put("counts", pmSettleAttachDao.getTheLastNumber(pmSettleCase.getId()));
		return map;
	}
	//得到结算情况
	@Override
	public PMSettleCase getCaseAndAttach(String appid, String settleMonth) {
		return pmSettleCaseDao.getSettleCase(appid,settleMonth);
	}
	//保存结算情况的【银行账户】和【结算金额】
	@Override
	public Map<String, Object> saveSettleCase(PMSettleCase pmSettleCase,INSCUser loginUser) {
		Map<String,Object> map = new HashMap<String,Object>();
		if(StringUtil.isEmpty(pmSettleCase.getId())){//没有上传附件//直接保存
			pmSettleCase.setStatus("1");
			pmSettleCase.setSettleTotalfee(new DecimalFormat("####").format(new BigDecimal(pmSettleCase.getSettleTotalfee().replace(",", "")).movePointRight(2)));
			pmSettleCase.setSettlementTotalfee(new DecimalFormat("####").format(new BigDecimal(pmSettleCase.getSettlementTotalfee().replace(",", "")).movePointRight(2)));
			pmSettleCaseDao.saveSettleCase(pmSettleCase);
		}else{//上传过附件//保存
			pmSettleCase.setStatus("1");
			pmSettleCase.setSettlementTotalfee(new DecimalFormat("####").format(new BigDecimal(pmSettleCase.getSettlementTotalfee().replace(",", "")).movePointRight(2)));
			pmSettleCaseDao.saveSettlementCase(pmSettleCase);
		}
		//当结算完成，将该月份的结算状态修改
		String settleDate =  pmSettleCase.getSettleDate();
		int year = Integer.parseInt(settleDate.substring(0, 4));
		int month = Integer.parseInt(settleDate.substring(5, 7));
		String lastDay = getLastDayOfMonth(year,month);
		pmSettlementDao.updateStatusBySettleDate(lastDay,pmSettleCase.getAppId(),loginUser);
		map.put("cid", pmSettleCase.getId());
		map.put("status", "success");
		map.put("message", "保存成功！");
		return map;
	}
	/**
     * 获取某月的最后一天
     * @Title:getLastDayOfMonth
     * @Description:
     * @param:@param year
     * @param:@param month
     * @param:@return
     * @return:String
     * @throws
     */
    public static String getLastDayOfMonth(int year,int month)
    {
        Calendar cal = Calendar.getInstance();
        //设置年份
        cal.set(Calendar.YEAR,year);
        //设置月份
        cal.set(Calendar.MONTH, month-1);
        //获取某月最大天数
        int lastDay = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
        //设置日历中月份的最大天数
        cal.set(Calendar.DAY_OF_MONTH, lastDay);
        //格式化日期
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String lastDayOfMonth = sdf.format(cal.getTime());
         
        return lastDayOfMonth;
    }
}