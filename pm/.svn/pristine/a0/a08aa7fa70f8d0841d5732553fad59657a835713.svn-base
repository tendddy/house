package com.cninsure.payment.controller.manager;


import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import jxl.Workbook;
import jxl.format.Border;
import jxl.format.BorderLineStyle;
import jxl.format.Colour;
import jxl.format.UnderlineStyle;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.cninsure.core.exception.ControllerException;
import com.cninsure.core.utils.BeanUtils;
import com.cninsure.payment.model.AuditModel;
import com.cninsure.payment.service.ReconciliationService;
import com.common.PagingParams;
@Controller
@RequestMapping("/audit/*")
public class AuditController {
	@Resource
	private ReconciliationService reconciliationService;
	@Autowired
	private HttpServletRequest request;
	
	@Value("${tx.institutionID}")
	private String txInstitutionID;

	/**
	 * 跳转到 各应用平台手续费结算管理 页面
	 * @return
	 * @throws ControllerException
	 */
	@RequestMapping(value="list",method=RequestMethod.GET)
	public ModelAndView showPolicyTongJi()throws ControllerException{
		ModelAndView mav = new ModelAndView("payment/audit");
		return mav;
	}


	//列表查看	
	@RequestMapping(value = "selectauditlist", method = RequestMethod.GET)
	@ResponseBody
	public Map<String,Object> selectAuditList(@ModelAttribute PagingParams para,
			@ModelAttribute AuditModel auditBean)throws ControllerException {
		if(auditBean!=null){
			if(auditBean.getStartdate()!=null&&auditBean.getStartdate().equals("")){
				auditBean.setStartdate(null);
			}
			if(auditBean.getEnddate()!=null&&auditBean.getEnddate().equals("")){
				auditBean.setEnddate(null);
			}
			if(auditBean.getPlatformSel()!=null&&auditBean.getPlatformSel().equals("")){
				auditBean.setPlatformSel(null);
			}
			auditBean.setInstitutionID(txInstitutionID);
		}
		
		Map<String, Object> map = BeanUtils.toMap(auditBean,para);
		return reconciliationService.selectAuditList(map);
	}
	//跳转到详细查询页面
	@RequestMapping(value = "detailquery", method = RequestMethod.GET)
	@ResponseBody
	public ModelAndView toBeDetailAudit(@ModelAttribute PagingParams para,@ModelAttribute AuditModel auditBean)
					throws ControllerException {
		ModelAndView mav = new ModelAndView("payment/auditdetailquery");
		//Map<String,Object> moneys = reconciliationService.getDetailAudit(auditBean);
		mav.addObject("selectdate", auditBean.getSelectdate());
		return mav;
	}
	//列表查看	
	@RequestMapping(value = "selectauditdetaillist", method = RequestMethod.GET)
	@ResponseBody
	public Map<String,Object> selectAuditDetailList(@ModelAttribute PagingParams para,
			@ModelAttribute AuditModel auditBean)throws ControllerException {
		if(auditBean!=null){
			if(auditBean.getOrderid()!=null&&auditBean.getOrderid().equals("")){
				auditBean.setOrderid(null);
			}
			if(auditBean.getPlatform_name()!=null&&auditBean.getPlatform_name().equals("")){
				auditBean.setPlatform_name(null);
			}
			if(auditBean.getApp_name()!=null&&auditBean.getApp_name().equals("")){
				auditBean.setApp_name(null);
			}
		}
		Map<String, Object> map = BeanUtils.toMap(auditBean,para);
		return reconciliationService.selectAuditDetailList(map);
	}

	// 【明细导出】按钮
	@RequestMapping(value = "downauditdetaillist", method = RequestMethod.GET)
	@ResponseBody
	public ModelAndView downauditdetaillist(@ModelAttribute AuditModel auditBean,HttpServletResponse response){ 
		if(auditBean!=null){
			if(auditBean.getOrderid()!=null&&auditBean.getOrderid().equals("")){
				auditBean.setOrderid(null);
			}
			if(auditBean.getPlatform_name()!=null&&auditBean.getPlatform_name().equals("")){
				auditBean.setPlatform_name(null);
			}
			if(auditBean.getApp_name()!=null&&auditBean.getApp_name().equals("")){
				auditBean.setApp_name(null);
			}
		}
		Map<String, Object> map = BeanUtils.toMap(auditBean);
	    List<Map<String,Object>> list = reconciliationService.downAuditDetailList(map); 
	        try {
				/**
				 * 获取传过来查询条件参数
				 * 建立Excel文档及工作表
				 */
				ServletOutputStream sos = response.getOutputStream();
				WritableWorkbook workbook =Workbook.createWorkbook(sos);// 建立Excel文档			
				WritableSheet wsheet = workbook.createSheet("auditdetail", 1);//工作表的名字（节目数据）	
				wsheet.setColumnView(0, 6);//根据内容设置列宽 
				wsheet.setColumnView(1, 30);
				wsheet.setColumnView(2, 25);
				wsheet.setColumnView(3, 15);
				wsheet.setColumnView(4, 15);
				wsheet.setColumnView(5, 30);
				wsheet.setColumnView(6, 18);
				wsheet.setColumnView(7, 15);
				wsheet.setColumnView(8, 15);
				/**
				 * 设置下载格式
				 */
				response.setContentType("text/x-msdownload");
				/**
				 * 设置Excel名称
				 */
				Date date=new Date();
				SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMddHHmmss");
				response.addHeader("Content-Disposition",
						"attachment;  filename=\"AuditDetail_" + formatter.format(date)+".xls" + "\"");
				
				/**
				 * 表头标题样式
				 */
				WritableFont wfont;
				WritableCellFormat wCF;
				// 设置表头格式，字是粗的，没有下划线，颜色是黑色
				wfont = new jxl.write.WritableFont(WritableFont.ARIAL, 10,
						WritableFont.BOLD, false, UnderlineStyle.NO_UNDERLINE,
						Colour.BLACK);
				wCF = new WritableCellFormat(wfont);
				wCF.setAlignment(jxl.format.Alignment.CENTRE);// 设置对齐方式为居中
				wCF.setVerticalAlignment(jxl.format.VerticalAlignment.CENTRE);//垂直居中
				wCF.setBackground(Colour.BLUE_GREY);  //设置背景颜色;
				wCF.setBorder(Border.ALL, BorderLineStyle.THIN);//设置边框;  
				/**
				 * 表内容样式0
				 */
				WritableFont wfont0;
				WritableCellFormat wCF0;
				// 设置表头格式，字是粗的，没有下划线，颜色是黑色
				wfont0 = new jxl.write.WritableFont(WritableFont.ARIAL, 10,
						WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE,
						Colour.BLACK);
				wCF0 = new WritableCellFormat(wfont0);
				wCF0.setAlignment(jxl.format.Alignment.CENTRE);// 设置对齐方式为居中
				wCF0.setVerticalAlignment(jxl.format.VerticalAlignment.CENTRE);//垂直居中
				wCF0.setBorder(Border.ALL, BorderLineStyle.THIN);//设置边框;  
				/**
				 * 表内容样式1
				 */
				WritableFont wfont1;
				WritableCellFormat wCF1;
				// 设置表头格式，字是粗的，没有下划线，颜色是黑色
				wfont1 = new jxl.write.WritableFont(WritableFont.ARIAL, 10,
						WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE,
						Colour.BLACK);
				wCF1 = new WritableCellFormat(wfont1);
				wCF1.setAlignment(jxl.format.Alignment.RIGHT);// 设置对齐方式为居中
				wCF1.setVerticalAlignment(jxl.format.VerticalAlignment.CENTRE);//垂直居中
				wCF1.setBorder(Border.ALL, BorderLineStyle.THIN);//设置边框;  
				/**
				 * 表内容样式2
				 */
				WritableFont wfont2;
				WritableCellFormat wCF2;
				// 设置表头格式，字是粗的，没有下划线，颜色是黑色
				wfont2 = new jxl.write.WritableFont(WritableFont.ARIAL, 10,
						WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE,
						Colour.BLACK);
				wCF2 = new WritableCellFormat(wfont2);
				wCF2.setAlignment(jxl.format.Alignment.LEFT);// 设置对齐方式为居中
				wCF2.setVerticalAlignment(jxl.format.VerticalAlignment.CENTRE);//垂直居中
				wCF2.setBorder(Border.ALL, BorderLineStyle.THIN);//设置边框;  
				/**
				 * 设置表头信息
				 */
				wsheet.addCell(new Label(0, 0, "行号", wCF));
				wsheet.addCell(new Label(1, 0, "平台支付流水号", wCF));
				wsheet.addCell(new Label(2, 0, "平台支付订单号", wCF));
				wsheet.addCell(new Label(3, 0, "总平台名称", wCF));
				wsheet.addCell(new Label(4, 0, "应用平台名称", wCF));
				wsheet.addCell(new Label(5, 0, "中金流水号", wCF));
				wsheet.addCell(new Label(6, 0, "平台支付订单金额", wCF));
				wsheet.addCell(new Label(7, 0, "中金订单金额", wCF));
				wsheet.addCell(new Label(8, 0, "情况", wCF));
				/**
				 * 根据查询条件获取列表信息
				 */
				for (int i = 0; i < list.size(); i++) {
					Map<String,Object> ccv = list.get(i);
					wsheet.addCell(new Label(0, (i + 1), String.valueOf(i+1),wCF0));
					wsheet.addCell(new Label(1, (i + 1), String.valueOf(ccv.get("payprotocolid")),wCF2));
					wsheet.addCell(new Label(2, (i + 1), String.valueOf(ccv.get("orderid")),wCF2));
					wsheet.addCell(new Label(3, (i + 1), String.valueOf(ccv.get("platform_name")),wCF2));
					wsheet.addCell(new Label(4, (i + 1), String.valueOf(ccv.get("app_name")),wCF2));
					wsheet.addCell(new Label(5, (i + 1), String.valueOf(ccv.get("txSn")),wCF2));
					wsheet.addCell(new Label(6, (i + 1), String.valueOf(ccv.get("payfee")),wCF1));
					wsheet.addCell(new Label(7, (i + 1), String.valueOf(ccv.get("txAmount")),wCF1));
					wsheet.addCell(new Label(8, (i + 1), String.valueOf(ccv.get("trcon")),wCF1));
				}

				// 主体内容生成结束
				workbook.write();// 写入文件
				workbook.close();
				sos.flush();// 关闭流
				sos.close();// 关闭流
				
				/*fileImage.delete();*/

			} catch (Exception e) {
				e.printStackTrace();
			}
            return null;   
    }  
	// 【导出】按钮
	@RequestMapping(value = "downauditlist", method = RequestMethod.GET)
	@ResponseBody
	public ModelAndView downAuditList(@ModelAttribute AuditModel auditBean,HttpServletResponse response){ 
		if(auditBean!=null){
			if(auditBean.getStartdate()!=null&&auditBean.getStartdate().equals("")){
				auditBean.setStartdate(null);
			}
			if(auditBean.getEnddate()!=null&&auditBean.getEnddate().equals("")){
				auditBean.setEnddate(null);
			}
		}
		Map<String, Object> map = BeanUtils.toMap(auditBean);
	    List<Map<String,Object>> list = reconciliationService.getPaymentReconList(map); 
	        try {
				/**
				 * 获取传过来查询条件参数
				 * 建立Excel文档及工作表
				 */
				ServletOutputStream sos = response.getOutputStream();
				WritableWorkbook workbook =Workbook.createWorkbook(sos);// 建立Excel文档			
				WritableSheet wsheet = workbook.createSheet("auditlist", 1);//工作表的名字（节目数据）	
				wsheet.setColumnView(0, 6);//根据内容设置列宽 
				wsheet.setColumnView(1, 18);
				wsheet.setColumnView(2, 15);
				wsheet.setColumnView(3, 15);
				wsheet.setColumnView(4, 15);
				wsheet.setColumnView(5, 15);
				/**
				 * 设置下载格式
				 */
				response.setContentType("text/x-msdownload");
				/**
				 * 设置Excel名称
				 */
				Date date=new Date();
				SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMddHHmmss");
				response.addHeader("Content-Disposition",
						"attachment;  filename=\"AuditList_" + formatter.format(date)+".xls" + "\"");
				
				/**
				 * 表头标题样式
				 */
				WritableFont wfont;
				WritableCellFormat wCF;
				// 设置表头格式，字是粗的，没有下划线，颜色是黑色
				wfont = new jxl.write.WritableFont(WritableFont.ARIAL, 10,
						WritableFont.BOLD, false, UnderlineStyle.NO_UNDERLINE,
						Colour.BLACK);
				wCF = new WritableCellFormat(wfont);
				wCF.setAlignment(jxl.format.Alignment.CENTRE);// 设置对齐方式为居中
				wCF.setVerticalAlignment(jxl.format.VerticalAlignment.CENTRE);//垂直居中
				wCF.setBackground(Colour.BLUE_GREY);  //设置背景颜色;
				wCF.setBorder(Border.ALL, BorderLineStyle.THIN);//设置边框;  
				/**
				 * 表内容样式0
				 */
				WritableFont wfont0;
				WritableCellFormat wCF0;
				// 设置表头格式，字是粗的，没有下划线，颜色是黑色
				wfont0 = new jxl.write.WritableFont(WritableFont.ARIAL, 10,
						WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE,
						Colour.BLACK);
				wCF0 = new WritableCellFormat(wfont0);
				wCF0.setAlignment(jxl.format.Alignment.CENTRE);// 设置对齐方式为居中
				wCF0.setVerticalAlignment(jxl.format.VerticalAlignment.CENTRE);//垂直居中
				wCF0.setBorder(Border.ALL, BorderLineStyle.THIN);//设置边框;  
				/**
				 * 表内容样式1
				 */
				WritableFont wfont1;
				WritableCellFormat wCF1;
				// 设置表头格式，字是粗的，没有下划线，颜色是黑色
				wfont1 = new jxl.write.WritableFont(WritableFont.ARIAL, 10,
						WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE,
						Colour.BLACK);
				wCF1 = new WritableCellFormat(wfont1);
				wCF1.setAlignment(jxl.format.Alignment.RIGHT);// 设置对齐方式为居中
				wCF1.setVerticalAlignment(jxl.format.VerticalAlignment.CENTRE);//垂直居中
				wCF1.setBorder(Border.ALL, BorderLineStyle.THIN);//设置边框;  
				/**
				 * 表内容样式2
				 */
				WritableFont wfont2;
				WritableCellFormat wCF2;
				// 设置表头格式，字是粗的，没有下划线，颜色是黑色
				wfont2 = new jxl.write.WritableFont(WritableFont.ARIAL, 10,
						WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE,
						Colour.BLACK);
				wCF2 = new WritableCellFormat(wfont2);
				wCF2.setAlignment(jxl.format.Alignment.LEFT);// 设置对齐方式为居中
				wCF2.setVerticalAlignment(jxl.format.VerticalAlignment.CENTRE);//垂直居中
				wCF2.setBorder(Border.ALL, BorderLineStyle.THIN);//设置边框;  
				/**
				 * 设置表头信息
				 */
				wsheet.addCell(new Label(0, 0, "行号", wCF));
				wsheet.addCell(new Label(1, 0, "对账日期", wCF));
				wsheet.addCell(new Label(2, 0, "中金订单数", wCF));
				wsheet.addCell(new Label(3, 0, "中金订单总金额", wCF));
				wsheet.addCell(new Label(4, 0, "平台订单数", wCF));
				wsheet.addCell(new Label(5, 0, "平台订单总金额", wCF));
				/**
				 * 根据查询条件获取列表信息
				 */
				for (int i = 0; i < list.size(); i++) {
					Map<String,Object> ccv = list.get(i);
					wsheet.addCell(new Label(0, (i + 1), String.valueOf(i+1),wCF0));
					wsheet.addCell(new Label(1, (i + 1), String.valueOf(ccv.get("selectdate")),wCF0));
					wsheet.addCell(new Label(2, (i + 1), String.valueOf(new DecimalFormat("######0").format(ccv.get("txcou"))),wCF1));
					wsheet.addCell(new Label(3, (i + 1), String.valueOf(new DecimalFormat("######0").format(ccv.get("txAmount"))),wCF1));
					wsheet.addCell(new Label(4, (i + 1), String.valueOf(new DecimalFormat("######0").format(ccv.get("paycou"))),wCF1));
					wsheet.addCell(new Label(5, (i + 1), String.valueOf(new DecimalFormat("######0").format(ccv.get("payfee"))),wCF1));
				}

				// 主体内容生成结束
				workbook.write();// 写入文件
				workbook.close();
				sos.flush();// 关闭流
				sos.close();// 关闭流
				
				/*fileImage.delete();*/

			} catch (Exception e) {
				e.printStackTrace();
			}
            return null;   
    }  
}
