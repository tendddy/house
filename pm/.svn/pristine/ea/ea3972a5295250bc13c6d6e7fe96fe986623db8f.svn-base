package com.cninsure.payment.controller.manager;


import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import payment.tools.util.StringUtil;

import com.cninsure.core.exception.ControllerException;
import com.cninsure.core.utils.BeanUtils;
import com.cninsure.payment.model.OrdersDetailModel;
import com.cninsure.payment.model.OrdersModel;
import com.cninsure.payment.service.PMPaymentService;
import com.common.PagingParams;
@Controller
@RequestMapping("/orders/*")
public class SelectOrdersController {
	@Resource
	private PMPaymentService pmpaymentService;
	


	/**
	 * 跳转到订单列表页面
	 * @return
	 * @throws ControllerException
	 */
	@RequestMapping(value="list",method=RequestMethod.GET)
	public ModelAndView showPolicyTongJi()throws ControllerException{
		ModelAndView mav = new ModelAndView("payment/orders");
		return mav;
	}


	//应用平台对账页面 列表查看	
	@RequestMapping(value = "initorderslist", method = RequestMethod.GET)
	@ResponseBody
	public Map<String,Object> initOrdersList(@ModelAttribute PagingParams para,@ModelAttribute OrdersModel ordersBean)
					throws ControllerException {
		if(ordersBean!=null){
			if(ordersBean.getPlatformName()!=null&&ordersBean.getPlatformName().equals("")){
				ordersBean.setPlatformName(null);
			}
			if(ordersBean.getStartdate()!=null&&ordersBean.getStartdate().equals("")){
				ordersBean.setStartdate(null);
			}
			if(StringUtil.isNotEmpty(ordersBean.getStartdate())){
				ordersBean.setStartdate(ordersBean.getStartdate().replace("-", "")+"000000");
			}
			if(ordersBean.getEnddate()!=null&&ordersBean.getEnddate().equals("")){
				ordersBean.setEnddate(null);
			}
			if(StringUtil.isNotEmpty(ordersBean.getEnddate())){
				ordersBean.setEnddate(ordersBean.getEnddate().replace("-", "")+"235959");
			}
			if(ordersBean.getAppOrderid()!=null&&ordersBean.getAppOrderid().equals("")){
				ordersBean.setAppOrderid(null);
			}
			if(ordersBean.getStatus()!=null&&ordersBean.getStatus().equals("")){
				ordersBean.setStatus(null);
			}
		}
		
		Map<String, Object> map = BeanUtils.toMap(ordersBean,para);
		return pmpaymentService.selectAllOrdersList(map);
	}
	//跳转到详细查询页面
	@RequestMapping(value = "toDetailOfOrders", method = RequestMethod.GET)
	@ResponseBody
	public ModelAndView toBeDetailQuery(@ModelAttribute PagingParams para,@ModelAttribute OrdersModel ordersBean)
					throws ControllerException {
		ModelAndView mav = new ModelAndView("payment/ordersdetail");
		OrdersDetailModel odmodel = pmpaymentService.selectOrdersDetailById(ordersBean.getId());

		mav.addObject("app_name", odmodel.getApp_name());
		mav.addObject("app_orderid", odmodel.getApp_orderid());
		mav.addObject("platform_name", odmodel.getPlatform_name());
		mav.addObject("bankcode", odmodel.getBankcode());
		mav.addObject("bankname", odmodel.getBankname());
		mav.addObject("card_type", odmodel.getCard_type());
		mav.addObject("customphone", odmodel.getCustomphone());
		mav.addObject("customcardno", odmodel.getCustomcardno());
		mav.addObject("validdate", odmodel.getValiddate());
		mav.addObject("cvn2", odmodel.getCvn2());
		mav.addObject("protocolid", odmodel.getProtocolid());
		mav.addObject("payprotocolid", odmodel.getPayprotocolid());
		mav.addObject("orderid", odmodel.getOrderid());
		mav.addObject("orderfee", new DecimalFormat("#,##0.00").format(new BigDecimal(odmodel.getOrderfee()).movePointLeft(2)));
		if(odmodel.getPayfee()!=null){
		mav.addObject("payfee", new DecimalFormat("#,##0.00").format(new BigDecimal(odmodel.getPayfee()).movePointLeft(2)));
	    }
		try {
			mav.addObject("orderdatetime", new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(
					new SimpleDateFormat("yyyyMMddHHmmss").parse(odmodel.getOrderdatetime())));
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		mav.addObject("status", odmodel.getStatus());
		mav.addObject("receiveurl", odmodel.getReceiveurl());
		mav.addObject("userinfourl", odmodel.getUserinfourl());
		mav.addObject("app_user_id", odmodel.getApp_user_id());
		mav.addObject("pay_type", odmodel.getPay_type());
		return mav;
	}
	
}
