package com.cninsure.payment.service;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.quartz.Scheduler;

import com.alibaba.fastjson.JSONObject;
import com.cninsure.core.dao.BaseService;
import com.cninsure.payment.entity.PMLogRecords;
import com.cninsure.payment.entity.PMPayment;
import com.cninsure.payment.entity.PMProducts;
import com.cninsure.payment.model.AppCheckModel;
import com.cninsure.payment.model.BaseModel;
import com.cninsure.payment.model.FtlPayVerifyCodeModel;
import com.cninsure.payment.model.OrderDetail4ActionModel;
import com.cninsure.payment.model.OrdersDetailModel;
import com.cninsure.payment.model.PaymentCoustomerModel;
import com.cninsure.payment.model.PaymentPlatformsModel;
import com.cninsure.payment.model.PlatformModel;
import com.cninsure.payment.model.QueryPayCodeModel;
import com.cninsure.system.entity.INSCUser;
import com.tenpay.client.ClientResponseHandler;

public interface PMPaymentService extends BaseService<PMPayment, Long> {

	/**
	 * 保存订单和应用平台客户数据 返回相应的支付平台信息
	 * 
	 * @param pcData
	 * @return
	 */
	public PaymentPlatformsModel initAllPayments(OrderDetail4ActionModel orderModel);

	/**
	 * 查询订单支付结果
	 * 
	 * @param pcModel
	 * @return
	 */
	public Map<String, Object> queryPayResult(PaymentCoustomerModel pcModel);

	/**
	 * 市场订单绑定支付（发送短信） 停止使用
	 * 
	 * @return
	 */
	@Deprecated
	public BaseModel orderPay4Tx1375(QueryPayCodeModel model);

	/**
	 * 市场订单绑定支付（短信验证并支付） 停止使用
	 * 
	 * @param protocolid
	 *            支付流水号
	 * @param smsValidationCode
	 *            验证码
	 * @return
	 */
	@Deprecated
	public BaseModel orderPay4Tx1376(String protocolid, String smsValidationCode);

	/**
	 * 发送支付验证码
	 * 
	 * @param model
	 * @return
	 */
	public FtlPayVerifyCodeModel orderPaySendVerificationCode(HttpServletRequest request, QueryPayCodeModel model);

	/**
	 * 总支付接口
	 * 
	 * 支付接口选择 从订单信息中得到（单笔代收、市场订单单笔代收）
	 * 
	 * @param payProtocolid
	 *            交易流水号
	 * @param smsValidationCode
	 *            验证码
	 * @return
	 */
	public BaseModel orderPay(String payProtocolid, String smsValidationCode);

	/**
	 * 查询订单定时任务后的状态
	 * 
	 * @param payProtocolid
	 * @param smsValidationCode
	 * @return
	 */
	public BaseModel selectOrderPay(String payProtocolid, String smsValidationCode);

	/**
	 * 市场订单单笔代收（1361）
	 * 
	 * 结算到多个账号
	 * 
	 * @param swModel
	 * @return
	 */
	public BaseModel orderPayTx1361(PMPayment paymentMainModel);

	/**
	 * 结算1341
	 * 
	 * 自动化结算分账
	 */
	public BaseModel autoStatementTx1341(PMPayment paymentModel, PMProducts productModel);

	// 后台方法区域start
	public Map<String, Object> selectOrdersList(Map<String, Object> map);

	public Map<String, Object> getTotalMoneys(PlatformModel platformBean);

	public Map<String, Object> selectPlatformList(Map<String, Object> map);

	public Map<String, Object> selectAppPlatformList(Map<String, Object> map);

	public Map<String, Object> getTotalMoneys(AppCheckModel appCheckBean);

	public Map<String, Object> selectAppOrdersList(Map<String, Object> map);
	// 后台方法区域end

	public PMPayment getBasicMess(String paymentId);

	public Map<String, Object> selectAllOrdersList(Map<String, Object> map);

	public OrdersDetailModel selectOrdersDetailById(String id);

	/**
	 * 像微信发起支付订单请求，以获取订单号信息
	 * 
	 * @param params
	 * @return
	 */
	public JSONObject sendOrderToWeixin(HashMap<String, String> params, String url);
	
	/**
	 * 
	 * @param code
	 * @return
	 */
	public net.sf.json.JSONObject unifiedorderToWeixin(JSONObject json,HttpServletRequest request, HttpServletResponse response);
	
	public void wxScanCodePayResultNotify(HttpServletRequest request, HttpServletResponse response);
	
	public net.sf.json.JSONObject getPayOrderStatusByLoop(JSONObject json);
	
	public String getOpenIdByCode(String code);

	public Scheduler getSched();

	public Map<String, Object> selectDirectPayment2011List(Map<String, Object> map);

	public PMLogRecords getLogRecordsInfoByPaymentID(Map<String, Object> map);

	public Map<String, Object> visitAgain2011(Map<String, Object> map, INSCUser loginUser, HttpServletRequest request);

	public Map<String, Object> selectSettlePayment1361List(Map<String, Object> map);

	public Map<String, Object> visitAgain1361(Map<String, Object> map, INSCUser loginUser, HttpServletRequest request);

	public PMPayment checkPaySucc(Map<String, Object> map);

	public Map<String, Object> selectSettleProduct1341List(Map<String, Object> map);

	public PMLogRecords getLogRecordsInfoByPaymentIDandProductID(Map<String, Object> map);

	public Map<String, Object> visitAgain1341(Map<String, Object> map, INSCUser loginUser, HttpServletRequest request);

	void gotoTenpay(PMPayment payment, String gateUrl);

	void tenpayReturn(PMPayment payment);

	void tenpayNotify(PMPayment payment, Map<String,String> tenpayResponse);

}