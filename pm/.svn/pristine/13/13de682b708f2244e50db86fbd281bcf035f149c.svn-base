package com.cninsure.payment.util.biz;

import java.util.LinkedHashMap;
import java.util.Map.Entry;

import net.sf.json.JSONObject;

public class VerifyB2BQueryResponseJSON {
	/**
	 * 验签B2B查询请求返回的JSON字符串
	 * @param args
	 */
	public static void main(String[] args) {
		//B2B请求返回的JSON字符串
		String str = "{\"version\":\"v1.0\",\"charset\":\"1\",\"systemid\":\"88888888\",\"corpid\":\"1\",\"itemid\":\"\",\"corpuserid\":\"\",\"orderid\":\"\",\"orderfee\":\"\",\"orderdatetime\":\"\",\"payorderid\":\"\",\"payfee\":\"\",\"ratefee\":\"\",\"paydatetime\":\"\",\"reserved\":\"保留字段\",\"orderStatus\":\"\",\"payresultcode\":\"0001\",\"payresultmsg\":\"参数“项目编号”不合法\",\"signmsg\":\"j3le8wsWODaC868ZWugDuYhPB6+bnZ+MLPoiJ4PVRqXb9VIu9ty/HlCF04zKqGfqhjHp71YdhLvg96KDAKB9Q+GvI7dCV5W6C/9CuQdxyRknMMmfe3rhkP8qm29rcePBu4HWBYzUQaq3FW6yAklXEqQQ+BcbKCfPIUJM0iva+5o=\"}";
		JSONObject jo = JSONObject.fromObject(str);
		System.out.println(jo);
		
		LinkedHashMap<String,String> paramsMap = new LinkedHashMap<String,String>();
		paramsMap.put("version",(String) jo.get("version"));
		paramsMap.put("charset",(String) jo.get("charset"));
		paramsMap.put("systemid",(String) jo.get("systemid"));
		paramsMap.put("corpid",(String) jo.get("corpid"));
		paramsMap.put("itemid",(String) jo.get("itemid"));
		paramsMap.put("corpuserid",(String) jo.get("corpuserid"));
		paramsMap.put("orderid",(String) jo.get("orderid"));
		paramsMap.put("orderfee",(String) jo.get("orderfee"));
		paramsMap.put("orderdatetime",(String) jo.get("orderdatetime"));
		paramsMap.put("payorderid",(String) jo.get("payorderid"));
		paramsMap.put("payfee",(String) jo.get("payfee"));
		paramsMap.put("ratefee",(String) jo.get("ratefee"));
		paramsMap.put("paydatetime",(String) jo.get("paydatetime"));
		paramsMap.put("reserved",(String) jo.get("reserved"));
		paramsMap.put("orderStatus",(String) jo.get("orderStatus"));
		paramsMap.put("payresultcode",(String) jo.get("payresultcode"));
		paramsMap.put("payresultmsg",(String) jo.get("payresultmsg"));
		paramsMap.put("signmsg",(String) jo.get("signmsg"));
		
		boolean b = checkSignature(paramsMap);
		String msg = "";
		if(b){
			msg = "签名验证成功";
		}else{
			msg = "签名验证失败";
		}
		System.out.println(msg);
	}
	public static boolean checkSignature(LinkedHashMap<String, String> params) {
		// 获取参数并签名处理
		StringBuffer sb = new StringBuffer();
		String signmsg = "";
		for(Entry<String, String> element:params.entrySet()){
			if("signmsg".equals(element.getKey())){
				signmsg = element.getValue();
			}else{
				sb.append(element.getKey()).append("=").append(element.getValue()).append("&");
			}
		}
		String paramsStr = sb.substring(0,sb.length()-1);
		System.out.println("返回的签名:"+signmsg);
		System.out.println("签名参数:"+paramsStr);
//		String reqdataMD5 = UtilMD5.crypt(paramsStr);
//		boolean b = UtilSHA1.verifySign(reqdataMD5, signmsg.replaceAll(" ", "+"), "D:/certificate/TrustSltf.crt");
		return false;
	}
}
