package com.cninsure.payment.controller.manager;


import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.cninsure.core.exception.ControllerException;
import com.cninsure.core.utils.BeanUtils;
import com.cninsure.core.utils.StringUtil;
import com.cninsure.payment.model.AppCheckModel;
import com.cninsure.payment.service.PMPaymentService;
import com.cninsure.payment.util.LogDateUtil;
import com.common.PagingParams;
@Controller
@RequestMapping("/eachReconciliation/*")
public class AppCheckController {
	@Resource
	private PMPaymentService pmpaymentService;
	@Autowired
	private HttpServletRequest request;


	/**
	 * 跳转到应用平台对账页面
	 * @return
	 * @throws ControllerException
	 */
	@RequestMapping(value="list",method=RequestMethod.GET)
	public ModelAndView showPolicyTongJi()throws ControllerException{
		ModelAndView mav = new ModelAndView("payment/appReconciliation");
		return mav;
	}


	//应用平台对账页面 列表查看	
	@RequestMapping(value = "initappchecklist", method = RequestMethod.GET)
	@ResponseBody
	public Map<String,Object> initAppCheckList(@ModelAttribute PagingParams para,@ModelAttribute AppCheckModel appCheckModel)
					throws ControllerException {
		if(appCheckModel!=null){
			if(appCheckModel.getPlatformName()!=null&&appCheckModel.getPlatformName().equals("")){
				appCheckModel.setPlatformName(null);
			}
			if(appCheckModel.getQuerydate()!=null&&appCheckModel.getQuerydate().equals("")){
				appCheckModel.setQuerydate(null);
			}
			if(appCheckModel.getQuerymonth()!=null&&appCheckModel.getQuerymonth().equals("")){
				appCheckModel.setQuerymonth(null);
			}
			if(StringUtil.isNotEmpty(appCheckModel.getQuerydate())){
				appCheckModel.setStartdate(appCheckModel.getQuerydate());
				appCheckModel.setEnddate(appCheckModel.getQuerydate());
			}
			if(StringUtil.isNotEmpty(appCheckModel.getQuerymonth())){
				appCheckModel.setStartdate(appCheckModel.getQuerymonth()+"-01");
				appCheckModel.setEnddate(LogDateUtil.getLastDateOfMonth(appCheckModel.getQuerymonth()));
			}
			if(StringUtil.isEmpty(appCheckModel.getQuerymonth())&&StringUtil.isEmpty(appCheckModel.getQuerydate())){
				return null;
			}
		}
		
		Map<String, Object> map = BeanUtils.toMap(appCheckModel,para);
		return pmpaymentService.selectAppPlatformList(map);
	}
	//跳转到详细查询页面
	@RequestMapping(value = "appdetailquery", method = RequestMethod.GET)
	@ResponseBody
	public ModelAndView toBeDetailQuery(@ModelAttribute PagingParams para,@ModelAttribute AppCheckModel appCheckModel)
					throws ControllerException {
		ModelAndView mav = new ModelAndView("payment/appdetailquery");
		if(StringUtil.isNotEmpty(appCheckModel.getQuerymonth())){
			appCheckModel.setStartdate(appCheckModel.getQuerymonth()+"-01");
			appCheckModel.setEnddate(LogDateUtil.getLastDateOfMonth(appCheckModel.getQuerymonth()));
		}
		Map<String,Object> moneys = pmpaymentService.getTotalMoneys(appCheckModel);
		mav.addObject("totalFormoneys", new DecimalFormat("#,##0.00").format(new BigDecimal(String.valueOf(moneys.get("forMoneys"))).movePointLeft(2)));
		mav.addObject("totalOutmoneys", new DecimalFormat("#,##0.00").format(new BigDecimal(String.valueOf(moneys.get("outMoneys"))).movePointLeft(2)));
		mav.addObject("platformid", appCheckModel.getId());
		mav.addObject("querydate", appCheckModel.getQuerydate());
		mav.addObject("startdateup", appCheckModel.getStartdate());
		mav.addObject("enddatedown", appCheckModel.getEnddate());
		return mav;
	}
	//详细查询页面订单列表
	@RequestMapping(value = "initapporderslist", method = RequestMethod.GET)
	@ResponseBody
	public Map<String,Object> initAppOrdersList( @ModelAttribute PagingParams para,@ModelAttribute AppCheckModel appCheckModel)
					throws ControllerException {
		if(appCheckModel!=null){
			if(appCheckModel.getCorpuserid()!=null&&appCheckModel.getCorpuserid().equals("")){
				appCheckModel.setCorpuserid(null);
			}
			if(appCheckModel.getOrderid()!=null&&appCheckModel.getOrderid().equals("")){
				appCheckModel.setOrderid(null);
			}
			if(appCheckModel.getStartdate()!=null&&appCheckModel.getStartdate().equals("")){
				appCheckModel.setStartdate(null);
			}
			if(appCheckModel.getEnddate()!=null&&appCheckModel.getEnddate().equals("")){
				appCheckModel.setEnddate(null);
			}
		}
		
		Map<String, Object> map = BeanUtils.toMap(appCheckModel,para);
		return pmpaymentService.selectAppOrdersList(map);
	}
//	//保存支付平台
//	@RequestMapping(value = "saveprotocol", method = RequestMethod.POST)
//	@ResponseBody
//	public Map<String,Object> saveProtocolInfo(@ModelAttribute PagingParams para,@ModelAttribute PMPaymentplatform pmpaymentplatform)
//				throws ControllerException {
//		return PMPaymentplatformservice.saveOrUpdateProtocolInfo(pmpaymentplatform);
//	}
	
}
