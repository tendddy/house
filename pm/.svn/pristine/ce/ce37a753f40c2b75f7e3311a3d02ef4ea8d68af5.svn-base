<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cninsure.payment.dao.PMSettlementMapper" >
  <resultMap id="BaseResultMap" type="com.cninsure.payment.entity.PMSettlement" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="modifydate" property="modifydate" jdbcType="TIMESTAMP" />
    <result column="app_id" property="appId" jdbcType="BIGINT" />
    <result column="pay_type" property="payType" jdbcType="VARCHAR" />
    <result column="payment_id" property="paymentId" jdbcType="BIGINT" />
    <result column="settlement_interval" property="settlementInterval" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="settle_date" property="settleDate" jdbcType="DATE" />
    <result column="settlement_date" property="settlementDate" jdbcType="TIMESTAMP" />
    <result column="settle_user" property="settleUser" jdbcType="VARCHAR" />
    <result column="orderfee" property="orderfee" jdbcType="INTEGER" />
    <result column="rate" property="rate" jdbcType="DECIMAL" />
    <result column="settle_fee" property="settleFee" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, createdate, modifydate, app_id,pay_type, payment_id, settlement_interval, status, settle_date, 
    settlement_date, settle_user, orderfee, rate, settle_fee
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from PMSettlement
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from PMSettlement
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cninsure.payment.entity.PMSettlement" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into PMSettlement (id, createdate, modifydate, 
      app_id,pay_type, payment_id, settlement_interval, 
      status, settle_date, settlement_date, 
      settle_user, orderfee, rate, 
      settle_fee)
    values (#{id,jdbcType=BIGINT}, #{createdate,jdbcType=TIMESTAMP}, #{modifydate,jdbcType=TIMESTAMP}, 
      #{appId,jdbcType=BIGINT},#{pay_type,jdbcType=VARCHAR}, #{paymentId,jdbcType=BIGINT}, #{settlementInterval,jdbcType=INTEGER}, 
      #{status,jdbcType=CHAR}, #{settleDate,jdbcType=DATE}, #{settlementDate,jdbcType=TIMESTAMP}, 
      #{settleUser,jdbcType=VARCHAR}, #{orderfee,jdbcType=INTEGER}, #{rate,jdbcType=DECIMAL}, 
      #{settleFee,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cninsure.payment.entity.PMSettlement" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into PMSettlement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="createdate != null" >
        createdate,
      </if>
      <if test="modifydate != null" >
        modifydate,
      </if>
      <if test="appId != null" >
        app_id,
      </if>
       <if test="payType != null" >
        pay_type,
      </if>
      <if test="paymentId != null" >
        payment_id,
      </if>
      <if test="settlementInterval != null" >
        settlement_interval,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="settleDate != null" >
        settle_date,
      </if>
      <if test="settlementDate != null" >
        settlement_date,
      </if>
      <if test="settleUser != null" >
        settle_user,
      </if>
      <if test="orderfee != null" >
        orderfee,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="settleFee != null" >
        settle_fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifydate != null" >
        #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="appId != null" >
        #{appId,jdbcType=BIGINT},
      </if>
      <if test="paymentId != null" >
        #{paymentId,jdbcType=BIGINT},
      </if>
      <if test="settlementInterval != null" >
        #{settlementInterval,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="settleDate != null" >
        #{settleDate,jdbcType=DATE},
      </if>
      <if test="settlementDate != null" >
        #{settlementDate,jdbcType=TIMESTAMP},
      </if>
      <if test="settleUser != null" >
        #{settleUser,jdbcType=VARCHAR},
      </if>
      <if test="orderfee != null" >
        #{orderfee,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="settleFee != null" >
        #{settleFee,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cninsure.payment.entity.PMSettlement" >
    update PMSettlement
    <set >
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifydate != null" >
        modifydate = #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="appId != null" >
        app_id = #{appId,jdbcType=BIGINT},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="paymentId != null" >
        payment_id = #{paymentId,jdbcType=BIGINT},
      </if>
      <if test="settlementInterval != null" >
        settlement_interval = #{settlementInterval,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="settleDate != null" >
        settle_date = #{settleDate,jdbcType=DATE},
      </if>
      <if test="settlementDate != null" >
        settlement_date = #{settlementDate,jdbcType=TIMESTAMP},
      </if>
      <if test="settleUser != null" >
        settle_user = #{settleUser,jdbcType=VARCHAR},
      </if>
      <if test="orderfee != null" >
        orderfee = #{orderfee,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="settleFee != null" >
        settle_fee = #{settleFee,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cninsure.payment.entity.PMSettlement" >
    update PMSettlement
    set createdate = #{createdate,jdbcType=TIMESTAMP},
      modifydate = #{modifydate,jdbcType=TIMESTAMP},
      app_id = #{appId,jdbcType=BIGINT},
      pay_type = #{payType,jdbcType=BIGINT},
      payment_id = #{paymentId,jdbcType=BIGINT},
      settlement_interval = #{settlementInterval,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      settle_date = #{settleDate,jdbcType=DATE},
      settlement_date = #{settlementDate,jdbcType=TIMESTAMP},
      settle_user = #{settleUser,jdbcType=VARCHAR},
      orderfee = #{orderfee,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DECIMAL},
      settle_fee = #{settleFee,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
	<select id="PMSettlement_getSettlementInterval" parameterType="com.cninsure.payment.entity.PMPayment" resultType="String">
	    select concat(settlement_interval) from pmappplatform where id=#{appId,jdbcType=BIGINT}
	</select>
	<insert id="PMSettlement_saveSettlement" parameterType="com.cninsure.payment.entity.PMSettlement" >
		INSERT INTO `pmsettlement` (`createdate`, `modifydate`, `app_id`, `pay_type`, `payment_id`, `settlement_interval`, `status`, 
		`settle_date`, `settlement_date`, `settle_user`, `orderfee`, `rate`, `settle_fee`) VALUES (
		sysdate(),sysdate(),#{appId, jdbcType=BIGINT},#{payType, jdbcType=VARCHAR},#{paymentId, jdbcType=BIGINT},
		 #{settlementInterval, jdbcType=INTEGER},#{status, jdbcType=CHAR},#{settleDate, jdbcType=DATE},
		 #{settlementDate, jdbcType=TIMESTAMP},#{settleUser, jdbcType=VARCHAR},#{orderfee, jdbcType=INTEGER},
		 #{rate, jdbcType=DECIMAL},#{settleFee, jdbcType=INTEGER})
	</insert>
	<select id="PMSettlement_getAppPlatformRate" parameterType="com.cninsure.payment.entity.PMPayment" resultType="String">
	    select concat(p.rate) from pmapprate p where p.app_id=#{appId,jdbcType=BIGINT} and p.maximum_amount>#{orderfee,jdbcType=BIGINT} and #{orderfee,jdbcType=BIGINT}>=p.minimum_amount
	</select>
	<select id="PMSettlement_getAppPlatformRateOfProduct" parameterType="com.cninsure.payment.entity.PMProducts" resultType="String">
	    select concat(p.rate) from pmapprate p where p.app_id=#{appId,jdbcType=BIGINT} and p.maximum_amount>#{orderfee,jdbcType=BIGINT} and #{orderfee,jdbcType=BIGINT}>=p.minimum_amount
	</select>
	<select id="PMSettlement_getAppReceivableRatefee" parameterType="Map" resultType="String">
	    select concat(app_receivable_ratefee) from pmratefee where pay_id=#{id,jdbcType=BIGINT} and pay_type = #{payType, jdbcType=VARCHAR}
	</select>
	<select id="PMSettlement_getAppReceivableRatefee1" parameterType="Map" resultType="String">
	    select concat(sum(app_receivable_ratefee)) from pmratefee where pay_id in(
	     <foreach collection="pmProducts" item="item" index="index" separator=",">
		   #{item.id,jdbcType=BIGINT}
		 </foreach>
	    ) and pay_type = #{payType, jdbcType=VARCHAR}
	</select>
	<select id="PMSettlement_selectSettlementList" resultType="Map" parameterType="Map">
		select DISTINCT pa.id,pa.platform_no,pa.platform_name,
		(case when (select count(1) from pmsettlement ps where ps.`status`='0' and ps.app_id=pa.id)>0 then '应结' else '已结' end) as statust,
		case when pa.settlement_interval='0' then '实时' else '每月' end settlement_interval,
		(select ps.settlement_date from pmsettlement ps where ps.`status`='1' and ps.settlement_interval='1' and ps.app_id=pa.id) settlement_date
		from pmappplatform pa 
		left join pmsettlement p on pa.id=p.app_id and p.`status`='0'
		<where>
			<if test="platformName != null and platformName != ''">
				and pa.platform_name = #{platformName, jdbcType=VARCHAR}
			</if>
			<if test=" statementStatus == 0 ">
				and (select count(1) from pmsettlement ps where ps.`status`='0' and ps.app_id=pa.id) > 0
			</if>
			<if test=" statementStatus == 1 ">
				and (select count(1) from pmsettlement ps where ps.`status`='0' and ps.app_id=pa.id) = 0
			</if>
		</where>
		<if test="sort != null and order != null">
			order by ${sort}  ${order}
		</if>
		<if test="sort == null">
			order by pa.createdate desc
		</if>
		limit #{offset},#{limit}
	</select>
	<select id="PMSettlement_getSettlementListCount" resultType="long" parameterType="Map">
		select count(1)
		from pmappplatform pa 
		<where>
			<if test="platformName != null and platformName != ''">
				and pa.platform_name = #{platformName, jdbcType=VARCHAR}
			</if>
			<if test="statementStatus != null and statementStatus != '' and statementStatus=='0'">
				and (select count(1) from pmsettlement ps where ps.`status`='0' and ps.app_id=pa.id)>0
			</if>
			<if test="statementStatus != null and statementStatus != '' and statementStatus=='1'">
				and (select count(1) from pmsettlement ps where ps.`status`='0' and ps.app_id=pa.id)=0
			</if>
		</where>
	</select>
	<select id="PMSettlement_selectSettlementDetailList" resultType="Map" parameterType="Map">
		select p.id,pp.orderid,p.orderfee,p.rate,p.settle_fee,p.settlement_interval,p.settle_date,p.settle_user,p.`status`,p.settlement_date 
		from pmsettlement p
		left join pmpayment pp on pp.id=p.payment_id
		<where>
			<if test="appid != null and appid != ''">
				and p.app_id = #{appid, jdbcType=VARCHAR}
			</if>
			<if test="statementStatus != null and statementStatus != ''">
				and p.`status` = #{statementStatus, jdbcType=VARCHAR}
			</if>
			<if test="settleDate != null and settleDate != ''">
				and p.settle_date = #{settleDate, jdbcType=VARCHAR}
			</if>
			<if test="orderid != null and orderid != ''">
				and pp.orderid = #{orderid, jdbcType=VARCHAR}
			</if>
			<if test="settlementInterval != null and settlementInterval != ''">
				and p.settlement_interval = #{settlementInterval, jdbcType=VARCHAR}
			</if>
		</where>
		<if test="sort != null and order != null">
			order by ${sort}  ${order}
		</if>
		<if test="sort == null">
			order by p.createdate desc
		</if>
		limit #{offset},#{limit}
	</select>
	<select id="PMSettlement_getSettlementDetailListCount" resultType="long" parameterType="Map">
	select count(1)
		from pmsettlement p
		left join pmpayment pp on pp.id=p.payment_id 
		<where>
			<if test="appid != null and appid != ''">
				and p.app_id = #{appid, jdbcType=VARCHAR}
			</if>
			<if test="statementStatus != null and statementStatus != ''">
				and p.`status` = #{statementStatus, jdbcType=VARCHAR}
			</if>
			<if test="settleDate != null and settleDate != ''">
				and p.settle_date = #{settleDate, jdbcType=VARCHAR}
			</if>
			<if test="orderid != null and orderid != ''">
				and pp.orderid = #{orderid, jdbcType=VARCHAR}
			</if>
			<if test="settlementInterval != null and settlementInterval != ''">
				and p.settlement_interval = #{settlementInterval, jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	<select id="PMSettlement_getStatementStatus" resultType="String" parameterType="Map">
	select sum(p.orderfee)  from pmsettlement p 
	where DATE_FORMAT( p.settle_date, '%Y-%m')=#{settleMonth, jdbcType=VARCHAR} and p.`status`='0' and p.app_id=#{appid, jdbcType=VARCHAR}
	</select>
	<select id="PMSettlement_getSettlementCount" resultType="long" parameterType="Map">
		select count(1)
		from pmsettlement p 
	where DATE_FORMAT( p.settle_date, '%Y-%m')=#{settleMonth, jdbcType=VARCHAR} and p.app_id=#{appid, jdbcType=VARCHAR}
	</select>
	<update id="PMSettlement_updateStatusBySettleDate" parameterType="Map" >
	    update pmsettlement
	    set modifydate = sysdate(),
	      settlement_date = sysdate(),
	      settle_user = #{loginUser,jdbcType=VARCHAR},
	      status = '1'
	    where app_id = #{appid,jdbcType=BIGINT} and settle_date = #{settleMonth,jdbcType=BIGINT} 
  </update>
</mapper>