package com.cninsure.payment.dao;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;

import com.cninsure.payment.entity.PMProducts;

@RunWith(SpringJUnit4ClassRunner.class)
@WebAppConfiguration(value = "src/main/webapp")
@ContextConfiguration(locations = { "classpath:config/spring-config.xml",
		"classpath:config/spring-security-config.xml",
		"classpath:config/spring-mvc-config.xml",
		"classpath:config/spring-config-db.xml", })
public class PmproductsDaoTest {
	
	@Resource
	private PMProductsDao dao;
	
	@Test
    public void deleteByPrimaryKey(){
    	
    }

	@Test
    public void insertbatch(){
		List<PMProducts> insertProductsModels = new ArrayList<PMProducts>();
		PMProducts ppdModel = new PMProducts();
		ppdModel.setCreatedate(new Date());
		ppdModel.setModifydate(new Date());
		ppdModel.setPaymentId(111L);
		ppdModel.setOrderfee(234);
		
		PMProducts ppdModel1 = new PMProducts();
		ppdModel1.setCreatedate(new Date());
		ppdModel1.setModifydate(new Date());
		ppdModel1.setPaymentId(111L);
		ppdModel1.setOrderfee(200);
		
		insertProductsModels.add(ppdModel);
		insertProductsModels.add(ppdModel1);
		dao.insertBatch(insertProductsModels);
    }

	@Test
    public void insertSelective(){
		PMProducts record = new PMProducts();
    	record.setCreatedate(new Date());
    	record.setModifydate(new Date());
    	record.setAppId(1111L);
    	record.setOrderfee(123);
    	
    	dao.insertSelective(record);
    }

	@Test
    public void selectByPrimaryKey(){
    	PMProducts record = dao.selectByPrimaryKey(1L);
    	System.out.println(record);
    }

	@Test
    public void updateByPrimaryKeySelective(){
    	PMProducts record = new PMProducts();
    	record.setId(1L);
    	record.setAppId(1111111L);
    	record.setPaymentId(22222L);
    	dao.updateByPrimaryKeySelective(record);
    }

    public void updateByPrimaryKey(PMProducts record){
    	
    }
}