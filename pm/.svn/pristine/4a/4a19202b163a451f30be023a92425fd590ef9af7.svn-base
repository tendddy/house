package com.cninsure.payment.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.cninsure.payment.dao.PMBanksDao;
import com.cninsure.payment.entity.PMBanks;
import com.cninsure.payment.entity.PMImage;
import com.cninsure.payment.model.ShowBankCardModel;
@Repository
public class PMBanksDaoImpl implements PMBanksDao{

	@Autowired(required = true)
	private SqlSession sqlSessionTemplate;

	public void setSqlSession1(SqlSession sqlSessionTemplate) {
		this.sqlSessionTemplate = sqlSessionTemplate;
	}
	
	@Override
	public int deleteByPrimaryKey(Long id) {
		return 0;
	}

	@Override
	public int insert(PMBanks record) {
		return this.sqlSessionTemplate.insert("PMBanks_insert", record);
	}

	@Override
	public int insertSelective(PMBanks record) {
		return this.sqlSessionTemplate.insert("PMBanks_insertSelective", record);

	}

	@Override
	public PMBanks selectByPrimaryKey(Long id) {
		return this.sqlSessionTemplate.selectOne("PMBanks_selectByPrimaryKey", id);
	}

	@Override
	public int updateByPrimaryKeySelective(PMBanks record) {
		return this.sqlSessionTemplate.update("PMBanks_updateByPrimaryKeySelective", record);
	}

	@Override
	public int updateByPrimaryKey(PMBanks record) {
		return this.sqlSessionTemplate.update("PMBanks_updateByPrimaryKey", record);
	}

	@Override
	public String getBanksId(String channelName) {
		return this.sqlSessionTemplate.selectOne("PMBanks_selectbanksidByChannelName", channelName);
	}

	@Override
	public int updateBankIDByChannelName(String channelName, String ids) {
		Map<String,String> map = new HashMap<String,String>();
		map.put("channelName", channelName);
		map.put("ids", ids);
		return this.sqlSessionTemplate.update("PMBanks_updateBankIDByChannelName", map);
	}

	@Override
	public long getConfigListCount(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectOne("PMBanks_getConfigListCount",map);
	}

	@Override
	public List<Map<Object, Object>> selectConfigList(Map<String, Object> map) {
		return this.sqlSessionTemplate.selectList("PMBanks_selectConfigList", map);
	}

	@Override
	public PMBanks getBanksList(String id) {
		return this.sqlSessionTemplate.selectOne("PMBanks_getBanksList",id);
	}

	@Override
	public int saveBanks(PMBanks pmbanks) {
		this.sqlSessionTemplate.insert("PMBanks_saveBanks", pmbanks);
		return 0;
	}

	@Override
	public int updateBanksName(PMBanks pmbanks) {
		return this.sqlSessionTemplate.update("PMBanks_updateBanksName", pmbanks);
	}

	@Override
	public int updateBanks(PMBanks pmbanks) {
		return this.sqlSessionTemplate.update("PMBanks_updateBanks", pmbanks);
	}


	@Override
	public List<PMBanks> selectAllUsefulBanks() {
		return this.sqlSessionTemplate.selectList("PMBanks_selectAllUsefulBanks");
	}

	@Override
	public List<PMBanks> selectUsefulBanksByCount(int showCount) {
		return this.sqlSessionTemplate.selectList("PMBanks_selectUsefulBanksByCount",showCount);
	}

	@Override
	public String selectPaymentPlatformBankCodesBySysBankCode(String sysBankCode) {
		return this.sqlSessionTemplate.selectOne("PMBanks_selectPaymentPlatformBankCodesBySysBankCode", sysBankCode);
	}

	@Override
	public List<ShowBankCardModel> selectBanksByAppUser(String appUserId) {
		return this.sqlSessionTemplate.selectList("PMBanks_selectBanksByAppUser", appUserId);
	}

	@Override
	public ShowBankCardModel selectBankByProtocalId(String protocolId) {
		return this.sqlSessionTemplate.selectOne("PMBanks_selectBankByProtocalId", protocolId);
	}

	@Override
	public int saveImageInfo(PMImage pmimage) {
		return this.sqlSessionTemplate.insert("PMBanks_saveImageInfo",pmimage);
	}

	@Override
	public int updateImageInfo(PMImage pmimage) {
		return sqlSessionTemplate.update("PMBanks_updateImageInfo",pmimage);
	}

	@Override
	public String getUploadPathByCode(String uploadPath) {
		return this.sqlSessionTemplate.selectOne("PMBanks_getUploadPath",uploadPath);
	}

	@Override
	public String getMaxBankOrder() {
		return this.sqlSessionTemplate.selectOne("PMBanks_getMaxBankOrder");
	}

	
}