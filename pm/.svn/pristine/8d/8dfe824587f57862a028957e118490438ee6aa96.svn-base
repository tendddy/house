package com.cninsure.payment.controller.manager;

import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.cninsure.core.exception.ControllerException;
import com.cninsure.core.utils.BeanUtils;
import com.cninsure.payment.entity.PMLogRecords;
import com.cninsure.payment.model.BindCardModel;
import com.cninsure.payment.service.PMBankcardService;
import com.cninsure.system.entity.INSCUser;
import com.common.PagingParams;

@Controller
@RequestMapping("/shanglian/*")
public class ShangLianController {
	@Resource
	private PMBankcardService bankcardService;
	@Autowired
	private HttpServletRequest request;

	/**
	 * 
	 * @return
	 * @throws ControllerException
	 */
	@RequestMapping(value = "list", method = RequestMethod.GET)
	public ModelAndView showPolicyTongJi() throws ControllerException {
		ModelAndView mav = new ModelAndView("payment/checkbindcard");
		return mav;
	}

	@RequestMapping(value = "initbindcardlist", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> initBindCardList(@ModelAttribute PagingParams para,@ModelAttribute BindCardModel bindcardModel)
			throws ControllerException {
		if (bindcardModel != null) {
			if (bindcardModel.getPlatformName() != null && bindcardModel.getPlatformName().equals("")) {
				bindcardModel.setPlatformName(null);
			}
			if (bindcardModel.getBankName() != null && bindcardModel.getBankName().equals("")) {
				bindcardModel.setBankName(null);
			}
			if (bindcardModel.getCardType() != null && bindcardModel.getCardType().equals("")) {
				bindcardModel.setCardType(null);
			}
			if (bindcardModel.getCustomcardno() != null && bindcardModel.getCustomcardno().equals("")) {
				bindcardModel.setCustomcardno(null);
			}
			if (bindcardModel.getCustomname() != null && bindcardModel.getCustomname().equals("")) {
				bindcardModel.setCustomname(null);
			}
			if (bindcardModel.getIdentificationNumber() != null && bindcardModel.getIdentificationNumber().equals("")) {
				bindcardModel.setIdentificationNumber(null);
			}
			if (bindcardModel.getCustomphone() != null && bindcardModel.getCustomphone().equals("")) {
				bindcardModel.setCustomphone(null);
			}
			if (bindcardModel.getStatus() != null && bindcardModel.getStatus().equals("")) {
				bindcardModel.setStatus(null);
			}
			if (bindcardModel.getStartdate() != null && bindcardModel.getStartdate().equals("")) {
				bindcardModel.setStartdate(null);
			}
			if (bindcardModel.getEnddate() != null && bindcardModel.getEnddate().equals("")) {
				bindcardModel.setEnddate(null);
			}
		}

		Map<String, Object> map = BeanUtils.toMap(bindcardModel, para);
		return bankcardService.selectBindCardList(map);
	}

	// 跳转到绑卡日志信息查看页面
	@RequestMapping(value = "bindcardDetail", method = RequestMethod.GET)
	@ResponseBody
	public ModelAndView bindCardDetail(@ModelAttribute PagingParams para,@ModelAttribute BindCardModel bindcardModel)
			throws ControllerException {
		Map<String, Object> map = BeanUtils.toMap(bindcardModel, para);
		map.put("interface_name", "商联-建立绑定关系");
		PMLogRecords pmLogRecords = bankcardService.getLogRecordsInfo(map);
		ModelAndView mav = new ModelAndView("payment/checkbindcardDetail");
		mav.addObject("paymentid", bindcardModel.getPaymentid());
		if(pmLogRecords!=null){
			mav.addObject("id", pmLogRecords.getId());
			mav.addObject("unencrypted_params", pmLogRecords.getUnencryptedParams());
			mav.addObject("request_params", pmLogRecords.getRequestParams());
			mav.addObject("response_params", pmLogRecords.getResponseParams());
			mav.addObject("remark", pmLogRecords.getRemark());
		}else{
			mav.addObject("id", null);
			mav.addObject("unencrypted_params", null);
			mav.addObject("request_params", null);
			mav.addObject("response_params", null);
			mav.addObject("remark", null);
		}
		return mav;
	}
	/**
	 * 再次访问
	 * @return
	 */
	@RequestMapping(value = "visitagain", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> visitAgain(@ModelAttribute PagingParams para,@ModelAttribute BindCardModel bindcardModel,
			HttpServletRequest request,HttpSession session) {
		INSCUser loginUser = (INSCUser) session.getAttribute("insc_user");
		Map<String, Object> result = new HashMap<String, Object>();
		Map<String, Object> map = BeanUtils.toMap(bindcardModel, para);
		map.put("interface_name", "商联-建立绑定关系");
		result = bankcardService.visitAgain(map,loginUser,request);
		return result;
	}

}
